{"version":3,"sources":["helpers/hooks/useLocalStorage.ts","helpers/auth.ts","features/header/components/header.tsx","features/home/components/home.tsx","features/login/components/login.tsx","features/polynomial/components/polynomial.tsx","helpers/myMaths.ts","features/dashboard/components/Dashboard.tsx","features/dashboard/components/Assignments.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["key","localStorage","getItem","value","setItem","setLocalStorage","users","username","password","userValid","userName","userId","userFound","forEach","u","sha256","Header","state","dispatch","className","to","style","cursor","user","size","color","onClick","type","navigate","Home","Login","React","useState","loginDetails","setLoginDetails","wrongDetails","setWrongDetails","emptyFieldsList","setEmptyFieldsList","useEffect","formValid","emptyFields","push","length","handleChange","e","targetId","currentTarget","id","targetValue","prevState","onSubmit","preventDefault","JSON","stringify","includes","placeholder","onChange","Polynomial","order","coefficients","answer","Error","polynomial","index","power","Fragment","Math","abs","renderPolynomial","customRand","lowest","highest","round","random","generateEasyQuadratic","answers","a","b","Dashboard","quadratic","setQuadratic","find","GetUserDash","Assignments","blankUserDetails","reducer","action","initialState","App","location","useReducer","basepath","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fecb55f9.chunk.js","sourcesContent":["type UseLocalStorage = [(key: string) => string | null, (key: string, value: string) => void];\r\n\r\nconst useLocalStorage = (): UseLocalStorage => {\r\n  const ls = (key: string): string | null => {\r\n    return localStorage.getItem(key);\r\n  };\r\n\r\n  const setLocalStorage = (key: string, value: string): void => {\r\n    localStorage.setItem(key, value);\r\n  };\r\n\r\n  return [ls, setLocalStorage];\r\n};\r\n\r\nexport { useLocalStorage };\r\n","import { useLocalStorage } from \"./hooks/useLocalStorage\";\r\nimport sha256 from \"sha256\";\r\n\r\nconst [localStorage, setLocalStorage] = useLocalStorage();\r\n\r\ntype User = {\r\n  username: string;\r\n  password: string;\r\n};\r\n\r\nconst users: User[] = [\r\n  {\r\n    username: \"Safiye\",\r\n    password: \"93c58fd44c8e57a9c07c2705b62667c6fcaae6ee8a6b62ae77bff052ad650840\" // Ah-HaHa\r\n  },\r\n  {\r\n    username: \"Naz\",\r\n    password: \"b28f6c253f56082a4f8182fd18f6f715dfd530d5ca727ee9bc6a967ea28ab849\" // Gravity!\r\n  }\r\n];\r\n\r\nconst userLoggedIn = (): boolean => {\r\n  if (localStorage(\"userId\") && localStorage(\"userId\") !== \"undefined\") {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst userValid = (): boolean => {\r\n  const userName = localStorage(\"userName\");\r\n  const userId = localStorage(\"userId\");\r\n\r\n  let userFound = false;\r\n  if (!userId || !userName) {\r\n    return false;\r\n  } else {\r\n    users.forEach(u => {\r\n      if (sha256(u.password) === userId) {\r\n        userFound = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  return userFound;\r\n};\r\n\r\nconst getUserDetails = () => {\r\n  return {\r\n    userName: localStorage(\"userName\") ? localStorage(\"userName\") : \"\",\r\n    userId: localStorage(\"userId\") ? localStorage(\"userId\") : \"\"\r\n  };\r\n};\r\n\r\nexport { users, userLoggedIn, localStorage, setLocalStorage, userValid, getUserDetails };\r\n","import React from \"react\";\r\nimport \"../styles/header.scss\";\r\nimport { Link, navigate } from \"@reach/router\";\r\nimport { userLoggedIn } from \"helpers/auth\";\r\nimport { User } from \"react-feather\";\r\nimport { Action, State } from \"App\";\r\n\r\ntype HeaderProps = {\r\n  state: State;\r\n  dispatch: React.Dispatch<Action>;\r\n};\r\n\r\ntype Props = HeaderProps;\r\n\r\nconst Header: React.FC<Props> = ({ state, dispatch }) => {\r\n  const handleClick = () => {\r\n    if (userLoggedIn()) {\r\n      dispatch({ type: \"SET_USER_LOGGED_OUT\" });\r\n      navigate(\"/Matics/login\");\r\n    } else {\r\n      navigate(\"/Matics/login\");\r\n    }\r\n  };\r\n  return (\r\n    <header className=\"AppHeader\">\r\n      <div className=\"HeaderContent WidthContent\">\r\n        <Link to=\"/Matics\">\r\n          <span style={{ cursor: \"pointer\" }}>Matics</span>\r\n        </Link>\r\n        <div className=\"UserPanel\">\r\n          {state.user.userId && (\r\n            <button className=\"Btn Transparent Primary WithIcon LightGrey\">\r\n              <User size={25} className=\"Icon\" color=\"#000\" />\r\n              {state.user.userName}\r\n            </button>\r\n          )}\r\n          <button className=\"Btn Transparent Primary\" onClick={handleClick}>\r\n            {state.user.userId ? \"Log Out\" : \"Log In\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport { Header };\r\n","import React from \"react\";\r\nimport { RouteComponentProps } from \"@reach/router\";\r\n\r\ntype Props = RouteComponentProps;\r\n\r\nconst Home: React.FC<Props> = () => {\r\n  return <div className=\"WidthContent\">Home</div>;\r\n};\r\n\r\nexport { Home };\r\n","import React from \"react\";\r\nimport { RouteComponentProps, navigate } from \"@reach/router\";\r\nimport \"../styles/login.scss\";\r\nimport sha256 from \"sha256\";\r\nimport { users, userValid } from \"helpers/auth\";\r\nimport { setLocalStorage } from \"helpers/auth\";\r\n\r\n// Icons\r\nimport { User } from \"react-feather\";\r\nimport { Lock } from \"react-feather\";\r\nimport { State, Action } from \"App\";\r\n\r\ntype LoginProps = {\r\n  state: State;\r\n  dispatch: React.Dispatch<Action>;\r\n};\r\n\r\ntype Props = LoginProps & RouteComponentProps;\r\n\r\ntype LoginDetails = {\r\n  username: string;\r\n  password: string;\r\n};\r\n\r\nconst Login: React.FC<Props> = ({ state, dispatch }) => {\r\n  const [loginDetails, setLoginDetails] = React.useState<LoginDetails>({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const [wrongDetails, setWrongDetails] = React.useState<boolean>(false);\r\n  const [emptyFieldsList, setEmptyFieldsList] = React.useState<string[]>([]);\r\n\r\n  React.useEffect(() => {\r\n    if (userValid()) {\r\n      navigate(\"/Matics/dashboard\");\r\n    }\r\n  });\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (formValid()) {\r\n      const user = { ...loginDetails, password: sha256(loginDetails.password) };\r\n      let userFound = false;\r\n      for (const u of users) {\r\n        if (JSON.stringify(u) === JSON.stringify(user)) {\r\n          userFound = true;\r\n        }\r\n      }\r\n      if (userFound) {\r\n        setWrongDetails(false);\r\n        const userName = user.username;\r\n        const userId = sha256(user.password);\r\n        setLocalStorage(\"userId\", userId);\r\n        setLocalStorage(\"userName\", userName);\r\n        dispatch({ type: \"SET_USER_DETAILS\", user: { userId, userName } });\r\n        navigate(\"dashboard\");\r\n      } else {\r\n        setWrongDetails(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const formValid = () => {\r\n    let emptyFields = [];\r\n    if (!loginDetails.username) {\r\n      emptyFields.push(\"username\");\r\n    }\r\n\r\n    if (!loginDetails.password) {\r\n      emptyFields.push(\"password\");\r\n    }\r\n\r\n    setEmptyFieldsList(emptyFields);\r\n\r\n    if (emptyFields.length > 0) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const targetId = e.currentTarget.id;\r\n    const targetValue = e.currentTarget.value;\r\n    if (targetId) {\r\n      setLoginDetails(prevState => ({\r\n        ...prevState,\r\n        [targetId]: targetValue\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Login WidthContent\">\r\n      <form className=\"LoginForm\" onSubmit={handleSubmit}>\r\n        <span className=\"Title\">Log In</span>\r\n        <span className=\"WarningMessage\">\r\n          {emptyFieldsList.length > 0 && \"Hey! Fill in the details...\"}\r\n          {wrongDetails && \"Wrong login deets...\"}\r\n        </span>\r\n        <div className=\"FormField WithIcon\">\r\n          <User className=\"Icon\" color=\"#2c3539\" size={20} />\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            className={emptyFieldsList.includes(\"username\") ? \"EditBox Warning\" : \"EditBox\"}\r\n            placeholder=\"Username\"\r\n            value={loginDetails.username}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"FormField WithIcon\">\r\n          <Lock className=\"Icon\" color=\"#2c3539\" size={20} />\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={emptyFieldsList.includes(\"password\") ? \"EditBox Warning\" : \"EditBox\"}\r\n            placeholder=\"Password\"\r\n            value={loginDetails.password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"ButtonContainer\">\r\n          <button type=\"submit\" className=\"Btn Primary\">\r\n            Log In\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Login };\r\n","import React from \"react\";\r\nimport \"../styles/polynomial.scss\";\r\n\r\ntype PolynomialProps = {\r\n  order: number;\r\n  coefficients: number[];\r\n  answer: number;\r\n};\r\n\r\ntype Props = PolynomialProps;\r\n\r\nconst Polynomial: React.FC<Props> = ({ order, coefficients, answer }) => {\r\n  if (coefficients.length !== order + 1) {\r\n    throw new Error(\r\n      `Wrong number of coefficients: ${coefficients.length} for polynomial of order: ${order}`\r\n    );\r\n  }\r\n\r\n  const renderPolynomial = () => {\r\n    let polynomial: React.ReactNode[] = [];\r\n    let index = 0;\r\n    for (let power = order; power >= 0; power--) {\r\n      if (coefficients[index] !== 0) {\r\n        polynomial.push(\r\n          <React.Fragment key={index}>\r\n            {coefficients[index] < 0 ? (\r\n              <div className=\"Operator\">-</div>\r\n            ) : (\r\n              power !== order && <div className=\"Operator\">+</div>\r\n            )}\r\n            <div className={power > 1 ? \"Term WithPower\" : \"Term\"}>\r\n              <span className={power > 0 ? \"Coefficient\" : \"Constant\"}>\r\n                {power > 0\r\n                  ? coefficients[index] !== 1 && Math.abs(coefficients[index])\r\n                  : Math.abs(coefficients[index])}\r\n              </span>\r\n              {power > 0 && <span className=\"Variable\">x</span>}\r\n              {power > 1 && <span className=\"Power\">{power}</span>}\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n      index = index + 1;\r\n    }\r\n    polynomial.push(\r\n      <React.Fragment key={order + 1}>\r\n        <div className=\"Operator\">=</div>\r\n        <div className=\"Constant\">{answer}</div>\r\n      </React.Fragment>\r\n    );\r\n\r\n    return polynomial;\r\n  };\r\n  return (\r\n    <div className=\"EquationField\">\r\n      <div className=\"Inner\">{renderPolynomial()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Polynomial };\r\n","export type TPolynomial = {\r\n  answers: number[];\r\n  coefficients: number[];\r\n};\r\n\r\nconst customRand = (lowest: number, highest: number) => {\r\n  if (highest < 0) {\r\n    throw new Error(`Cannot have negative highest number: ${highest}`);\r\n  }\r\n  return Math.round(Math.random() * (Math.abs(lowest) + highest) - Math.abs(lowest));\r\n};\r\n\r\nconst generateEasyQuadratic = (): TPolynomial => {\r\n  let polynomial: TPolynomial = {\r\n    answers: [],\r\n    coefficients: []\r\n  };\r\n\r\n  polynomial.answers = [customRand(-9, 9), customRand(-9, 9)];\r\n  //   polynomial.answers = [Math.round(Math.random() * 18 - 9), Math.round(Math.random() * 18 - 9)];\r\n\r\n  const [a, b] = polynomial.answers;\r\n\r\n  polynomial.coefficients = [1, a + b, a * b];\r\n\r\n  // console.log(\"Returning polynomial:\");\r\n  // console.log(polynomial.answers);\r\n  // console.log(polynomial.coefficients);\r\n  return polynomial;\r\n};\r\n\r\nexport { generateEasyQuadratic };\r\n","import React from \"react\";\r\nimport { RouteComponentProps, navigate } from \"@reach/router\";\r\nimport \"../styles/dashboard.scss\";\r\nimport { Polynomial } from \"features/polynomial/components/polynomial\";\r\nimport { generateEasyQuadratic, TPolynomial } from \"helpers/myMaths\";\r\nimport { users, userValid } from \"helpers/auth\";\r\nimport sha256 from \"sha256\";\r\nimport { localStorage } from \"helpers/auth\";\r\n\r\ntype DashboardProps = {};\r\n\r\ntype Props = DashboardProps & RouteComponentProps;\r\n\r\nconst Dashboard: React.FC<Props> = () => {\r\n  const [quadratic, setQuadratic] = React.useState<TPolynomial>({\r\n    answers: [],\r\n    coefficients: []\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!userValid()) {\r\n      navigate(\"/Matics/login\");\r\n    }\r\n    setQuadratic(generateEasyQuadratic());\r\n  }, []);\r\n\r\n  const GetUserDash = (userId: string | null) => {\r\n    const user = users.find(user => sha256(user.password) === userId);\r\n\r\n    if (user) {\r\n      switch (user.username) {\r\n        case \"Naz\":\r\n          return <span>Naz</span>;\r\n        case \"Safiye\":\r\n          return <span>Safiye</span>;\r\n        default:\r\n          return <span>NO USER FOUND</span>;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Dashboard WidthContent\">\r\n      <span className=\"Title\">\r\n        <h1>Dashboard</h1>\r\n      </span>\r\n      <div className=\"EqnGenerator\">\r\n        <div className=\"Eqn\">\r\n          {quadratic.coefficients.length > 0 && (\r\n            <Polynomial order={2} coefficients={quadratic.coefficients} answer={0} />\r\n          )}\r\n        </div>\r\n        <div className=\"BtnContainer\">\r\n          <button className=\"Btn Grey\" onClick={() => setQuadratic(generateEasyQuadratic())}>\r\n            Generate New Equation\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"UserDash\">{GetUserDash(localStorage(\"userId\"))}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Dashboard };\r\n","import React from \"react\";\r\nimport { RouteComponentProps } from \"@reach/router\";\r\n\r\ntype AssignmentsProps = {};\r\n\r\ntype Props = AssignmentsProps & RouteComponentProps;\r\n\r\nconst Assignments: React.FC<Props> = () => {\r\n  return (\r\n    <div className=\"Assignments\">\r\n      <span className=\"Title\">Assignments</span>\r\n      <div className=\"Body\">Body</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Assignments };\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport { Header } from \"./features/header/components/header\";\nimport { Router, LocationContext } from \"@reach/router\";\nimport { Home } from \"./features/home/components/home\";\nimport { Login } from \"./features/login/components/login\";\nimport { Dashboard } from \"./features/dashboard/components/Dashboard\";\nimport { Assignments } from \"features/dashboard/components/Assignments\";\nimport { setLocalStorage, userValid, getUserDetails } from \"helpers/auth\";\n\nconst blankUserDetails: User = {\n  userId: \"\",\n  userName: \"\"\n};\n\ntype User = {\n  userId: string | null;\n  userName: string | null;\n};\n\nexport type State = {\n  user: User;\n};\n\nexport type Action =\n  | {\n      type: \"SET_USER_DETAILS\";\n      user: User;\n    }\n  | {\n      type: \"SET_USER_LOGGED_OUT\";\n    };\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"SET_USER_DETAILS\":\n      return {\n        ...state,\n        user: action.user\n      };\n    case \"SET_USER_LOGGED_OUT\":\n      setLocalStorage(\"userName\", \"\");\n      setLocalStorage(\"userId\", \"\");\n      return {\n        ...state,\n        user: blankUserDetails\n      };\n  }\n};\n\nconst initialState = {\n  user: blankUserDetails\n};\n\ntype AppProps = {\n  location: LocationContext;\n};\n\ntype Props = AppProps;\n\nconst App: React.FC<Props> = ({ location }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  React.useEffect(() => {\n    if (userValid()) {\n      const { userName, userId } = getUserDetails();\n      dispatch({ type: \"SET_USER_DETAILS\", user: { userId, userName } });\n    } else {\n      dispatch({ type: \"SET_USER_LOGGED_OUT\" });\n    }\n  }, [dispatch, location]);\n\n  return (\n    <div className=\"App\">\n      <Header state={state} dispatch={dispatch} />\n      <Router basepath=\"/Matics\">\n        <Home path=\"/\" />\n        <Login path=\"login\" state={state} dispatch={dispatch} />\n        <Dashboard path=\"dashboard\" />\n        <Assignments path=\"assignments\" />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Location } from \"@reach/router\";\n\nReactDOM.render(\n  <Location>{location => <App location={location} />}</Location>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}